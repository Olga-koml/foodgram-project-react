name: Foodgram workflow

on: [push]
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python

        uses: actions/setup-python@v2
        with:
          python-version: 3.10.6

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r backend/requirements.txt
      - name: Test with flake8
        run: |
          python -m flake8

  build_and_push_backend_to_docker_hub:
    name: Build and Push Backend
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:v2.14.06.2023

  build_and_push_frontend_to_docker_hub:
    name: Build and Push Frontend
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: ./frontend/
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:v.14.06.2023

  copy_compose_and_nginx:
    name: Copy compose and nginx
    runs-on: ubuntu-latest
    needs: build_and_push_backend_to_docker_hub
    steps:
      - uses: actions/checkout@master
      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: "infra/*"
          target: "./foodgram_project"
          strip_components: 1

  copy_docs:
    name: Copy Redocs
    runs-on: ubuntu-latest
    needs: build_and_push_backend_to_docker_hub
    steps:
      - uses: actions/checkout@master
      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: "docs/."
          target: "./foodgram_project/docs/"
          strip_components: 1

  copy_data:
    name: Copy data ingredients
    runs-on: ubuntu-latest
    needs: build_and_push_backend_to_docker_hub
    steps:
      - uses: actions/checkout@master
      - name: copy file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          source: "data/."
          target: "./foodgram_project/data/"
          strip_components: 1
  
  deploy:
    runs-on: ubuntu-latest
    needs: 
      - build_and_push_backend_to_docker_hub
      - build_and_push_frontend_to_docker_hub
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd foodgram_project/
            sudo systemctl stop nginx
            sudo docker compose down -v
            sudo docker compose stop
            sudo docker compose rm -f backend
            sudo docker compose rm -f frontend
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:v.14.06.2023
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:v2.14.06.2023
            sudo rm -r .env
            touch .env
            echo SECRET_KEY_APP=${{ secrets.SECRET_KEY_APP }} >> .env
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
            # echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_DB=${{ secrets.POSTGRES_DB }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            sudo docker compose up -d

  send_message_to_telegram:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: Деплой ${{ github.workflow}} успешно завершился!
